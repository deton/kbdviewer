■ 1.28 での変更点 (2010-01-01)

* シフト打鍵を用いる入力方式に対応
  ControlBlock中で同じキーのシフト無し打鍵とシフトあり打鍵を
  '無し/あり' と区切って指定します。
    {"あ", ... ,"つ"/"っ", ...}
    { { ... }, ... ,{ ... }/{ ... }, ...}

* テーブルファイルの書式を拡張
  矢印定義 '-n>' を導入。
    -23>-26>@m ; fj: 交ぜ書き変換
    -26>-23>@b ; jf: 部首合成

* 外字入力補助機能
  熟語ガイドが発動したときに熟語ガイドに入っている外字に一時的に
  ストロークが割り当てられます。

* 強制練習モード
  交ぜ書き変換により得られた候補を、熟語ガイドと同様のガイド表示に
  従って絞り込みながら直接入力できます。

* シフト打鍵によるストロークロック機能
  Shift を押しながら打鍵することでストロークロック (百相鍵盤『き』で
  言うところの甲打省略) が働きます。
  
* 漢直WinをOFFにしたときに各種モードを初期状態にリセットする: offResetModes=nnn... オプション (木原さん [offResetModes])
* offHide=2 の状態から一時的にウィンドウを表示する機能: @w 特殊定義 (木原さん [tmpshowwin])
* BackSpace でストローク単位の消去: weakBS=1 オプション
* 今打鍵したキーを入力する: @^ 特殊定義
* 仮想鍵盤の配色・フォントのカスタマイズ機能: kwstyle.exe
* useCtrlKey=1 の場合や XKeymacs との同時使用時の問題を修正:
* C-h 等を XKeymacs と同様の方法で処理するオプション: useCtrlKey=2 オプション ([漢直スレ4:253])
* BackSpace 等や @v のキー送出に keybd_event() を用いる: outputVKeyMethod=1 オプション
* 文字送出方法に WM_UNICHAR を追加:
* Unicode 文字への対応のテストコード(直接入力のみ、U+0080〜U+3FFF限定): outputUnicode=1 オプション
* タイトルバーのカタカナモード・全角モード・句読点モードの表示順を t.tbl での配置に合わせて修正: ([Issue:1])
* 直前の文字を入力してから仮想鍵盤を表示するまでの時間指定: displayHelpDelay=n オプション ([Issue:2])
* 熟語ガイドに「園、死、ム」などからはじまる熟語を登録しても いっさい表示されないバグをfix: ([漢直スレ4:132])
* 熟語ガイドを有効にしないと defguide（phoenix 配列の配字案内等）が 表示されない問題を修正:
* @v や Tab を使って"h"を入力したときに内部バッファが 間違って一文字削除されてしまう問題を修正:
* Visual Studio 2008 でコンパイルが通るように修正:

■ 1.27f での変更点 (2006-03-03)

* 部首合成変換の改良アルゴリズム
  by Kiichiro YAMANOBE [tcode-ml:2652,2662] (cf. [連習3:767-])
  > 「準シ→隼」が出るようになります。（「シ準→汁」は今まで通り）
  kanchiku.ini に「bushuAlgo=YAMANOBE」で、山辺さんによる改良版アルゴリズムを
  使用します。「bushuAlgo=OKA」または無指定で、従来どおりの、岡さんによる
  アルゴリズムを使用します。

* 活用形の交ぜ書き変換をサポート
  (山辺さん [tcode-ml:2644--2645])
  活用する語は、活用形のままで交ぜ書き変換することができます
  (これまでは、語幹のみで変換しなければなりませんでした)。
  kanchoku.ini で「conjugationalMaze=2」と指定すると有効になります。
  - 候補選択モードで、「>」で語幹を縮め、「<」で伸ばす
  - 短くした時は活用語のみ検索
  - その読み長さ状況での候補が一つだけの場合は、確定動作なしで続きの入力が可能
    (Enter で明示的に確定してもよい)

  例えば、
    「あおい」の読みで変換すると、
    → 「あおい」と「あおい―」の候補が検索される (ここまでは従来と同様)
    → 「>」キーを押すことにより、語幹が縮む
    → 「あお―」が検索される
    → もう一度「>」で、さらに語幹が縮む
    → 「あ―」が検索される
  のようになります。

* useWMIMECHAR オプションは outputMethod (後述) とリネームされました。
  useWMIMECHAR も使えますが、そのうち廃止されるかもしれません。

* フックと ImmSetCompositionString の組み合わせによる文字送出、および
  ウィンドウクラスごとに異なる文字の送出方法のサポート
  (木原さん、および山辺さん [tcode-ml:2625--2634])

  「漢直Win」がアプリケーションに文字を送出する方法として、
  フックと ImmSetCompositionString の組み合わせによる文字送出を、新たに
  サポートしました。
  これまで「漢直Win」が使えなかったソフトも利用できるかもしれません。
  kanchoku.ini に、次のように記述して指定します。
    enableWMKANCHOKUCHAR=1
    outputMethod=2

  また、文字送出方法をウィンドウクラスごとに指定することができます。
  kanchoku.ini に、次の形式で指定します。
    [識別子]
    className=ウィンドウのクラス名
    outputMethod=0, 1, 2 のいずれか
  いくつかの設定の例が kanchoku.ini に書かれていますので、参考にしてください。
  送出方法の意味は、
  - 0 … WM_CHAR
  - 1 … WM_IME_CHAR
  - 2 … WM_KANCHOKU_CHAR (フック + ImmSetCompositionString)
  です。
  ※ ウィンドウのクラス名は、付属のツール wininfo.exe で調べることができます。

* Firefox 1.5 で BackSpace で二文字消去されてしまう問題の対処
  (木原さん [tcode-ml:2625])
  WM_KEYDOWN と WM_KEYUP の間に Sleep() を入れることで対処しています。
  この問題が発生する場合は、「outputSleep=1」(あるいはもっと大きな数字) 
  オプションを試してみてください。

* 半角かな変換
  kanchoku.ini で「enableHankakuKana=1」オプションを指定すると、
  「全/半モード」(@Z, T-Code の「33」、TUT-Code の「\」) 時に、
  かたかなが半角かなに変換されます。

* 入力の記録
  kanchoku.ini にて「record=kwrecord.txt」オプションを設定すると、
  kwrecord.txt ファイルに、次のように入力の記録を取ります。
    Dec 25 18:26  文字:   56  部首:   0(0%)  交ぜ書き:   0(0%)  機能:   0(0%)
    Dec 25 18:37  文字:  190  部首:   0(0%)  交ぜ書き:   0(0%)  機能:   0(0%)
    Dec 25 18:50  文字:  508  部首:   0(0%)  交ぜ書き:   0(0%)  機能:   0(0%)
    …

  漢直Win を終了するごとに、そのセッションでの入力記録が、
  指定されたファイルに追加して書き込まれます。

  記録ファイルの各項目の意味は以下のとおりです。[*1]
  - 日付・時刻: 漢直Win を終了した時刻
  - 文字: 直接入力した文字数 [*2]
  - 部首: 部首合成で入力した文字数 (の全打鍵数に対する割合)
  - 交ぜ書き: 交ぜ書きで入力した文字数 (の全打鍵数に対する割合)
  - 機能: 特殊機能 (補助入力、文字ヘルプ、かなモードなど) を
    使用した回数 (の全打鍵数に対する割合)
  ----
  [*1] tc2 の .tc-record とほぼ同様の書式になるようにしています。
  
  [*2] 部首合成や交ぜ書きの読みとして入力した文字も、
  直接入力した文字数に含まれます。
  たとえば、「◇き社」の読みで「貴社」と交ぜ書き変換した場合、
  直接入力で入力した文字は「き(1)」「社(1)」の計 2 文字、
  交ぜ書きで入力した文字は「貴(1)」「社(1)」の計 2 文字、
  特殊機能を使用した回数は 1 回、とカウントされます。

* 文字ごとの統計
  kanchoku.ini にて「stat=kwstat.txt」オプションを設定すると、
  kwstat.txt ファイルに、次のように文字ごとの入力の統計を取ります。
    、      137     0
    。      126     0
    あ      31      0
    い      216     0
    う      77      0
    …      …      …
    愛      2       0
    悪      7       0
    圧      2       0
    …      …      …

  フィールドの意味は、左から順に、
  - 対象文字
  - 直接入力した回数
  - 補助入力した回数 (部首合成、交ぜ書きなど)
  です。

  漢直Win を終了するごとに、過去の入力情報を含めた累計の統計が、
  指定されたファイルに上書きして書き込まれます。



■ 1.27e での変更点 (2004-12-12)

* 起動時に「漢直Win」のウィンドウを隠す
  (木原さん [tcode-ml:2579] による)

  起動時の「漢直Win」のウィンドウがわずらわしい場合に、
  モードを ON にするまで、仮想鍵盤のウィンドウを表示しないように
  することができます。

  この設定を有効にするのは、
  kanchoku.ini にて「offHide=1」(OFF 時にウィンドウを隠す」を指定し、
  さらに、ショートカットのプロパティの「実行時の大きさ」を「最小化」に
  指定します。

* 熟語ガイド機能に関する変更
  (山辺さん [tcode-ml:2580,2583] による)

  □ 配字案内

  熟語ガイドとして表示する文字がない場合に、仮想鍵盤上に配字案内を
  表示することができます。たとえば、phoenix 配列の場合なら、
  kanchoku.ini にて、
    defg=亜域液牡凱梶丸偽漁吟芸元鯉剛坐雑事蛇什傷上笥税糎促濁中鍔努峠寧函備侮別頬脈唯乱令
  と指定しておくと、
    別侮備函寧　頬脈唯乱令
    坐剛鯉元芸　雑事蛇什傷
    凱牡液域亜　梶丸偽漁吟
    促糎税笥上　濁中鍔努峠
  のような配字案内が、仮想鍵盤に表示されるようになります。

  「defg=...」には、ガイド対象とする文字を、順不同で並べたものを
  指定すればよいようです。

  □ 熟語ガイド辞書 (kwgg.dic) のフォーマット拡張

  熟語ガイド辞書にて、複数のマッチ対象パターンを指定できる
  ようになりました。たとえば、
    ぁ /ぁぃぅぇぉあいうえお
    ぃ /ぁぃぅぇぉあいうえお
     :
     :
    お /ぁぃぅぇぉあいうえお
  といった指定を、
    ぁ ぃ ぅ ぇ ぉ あ い う え お /ぁぃぅぇぉあいうえお
  のように、簡潔に書くことができます。

* テーブルファイル (*.tbl) での、入力方式固有の設定

  - #define table-name "T"
    入力方式の名前を指定します。
    指定した名前は、漢直Win のタイトルバーに表示されます。

  - #define defguide "亜域液牡凱…"
    kanchoku.ini での「defg="亜域液牡凱…"」指定と同様。
    「#define defguide」と「defg=」の両方が指定された場合には、
    「defg=」の方が優先されます。

  - #define prefix /■/40/■□/回/
    Try-Code(仮) や TT-Code などの文字ヘルプを使用します。
    Try-Code : #define prefix /■/40/■□/回/
    TT-Code  : #define prefix /▲/26,23/▲○/▲/:/▽/23,26/▽○/▽/
    S-Code   : #define prefix /■/26,23/■○/回/:/▲/23,26/▲○/品/



■ 1.27d での変更点 (2004-08-10)

* 岡俊行さんによる以下の変更 ([tcode-ml:2572])。

  - VC6 のプロジェクトファイル (kanchoku.dsw, kanchoku.dsp)
  - VC6 でコンパイルが通る (no error, no warning)
  - ON/OFF のホットキーとして、CTRLなどの修飾キーなしも使える
  - ヒストリ関係の未初期化など、いくつかのバグフィックス

  以下は岡さんによるドキュメントです。

  > 変更した箇所は、<OKA> 〜 </OKA> で囲んでありますので、grep
  > などで検索していただければ、すぐにわかるかと思います。
  > 主な変更点は、ml に書いたとおり、
  > 
  > ・VC6 のプロジェクトファイル (kanchoku.dsw, kanchoku.dsp)
  > ・VC6 でコンパイルが通る (no error, no warning)
  > ・ON/OFF のホットキーとして、CTRLなどの修飾キーなしも使える
  > ・ヒストリ関係の未初期化など、いくつかのバグフィックス
  > 
  > となります。
  > 
  > 無修飾のホットキーを定義するには、kanchoku.ini に
  > 
  > unmodifiedHotKey=1c
  > 
  > などと記述します (これは「変換」キーをホットキーとして使用
  > する例です)。
  > この記述は、hotKey=xx の記述と両立します。つまり、同時に
  > 
  > hotKey=dc
  > 
  > と記述すると、「Ctrl+\」「変換」のどちらもホットキーとして
  > 使用可能です。あるいは、
  > 
  > hotKey=1c
  > unmodifiedHotKey=1c
  > 
  > と記述すれば、「変換」「Ctrl+変換」のどちらもホットキーに
  > なります。



■ 1.27c での変更点 (2003-12-28)

* キーリピート時の動作の改善

  キーリピート時の画面書換えが追いつかない問題が改善されました。
  (連習スレ-2 99 氏 [517])

* 256 色環境での表示の改善

  256 色環境での表示がディザになって見にくくなる問題が改善されました。
  (「漢直Win」「漢索窓」とも)
  (連習スレ-2 99 氏 [522,537-538])

* 前置型変換中の後置型変換

  部首合成変換や交ぜ書き変換において、前置型変換の読みの入力中に、
  ミニバッファの内容に対して後置型の変換が行えるようになりました。
  (連習スレ-2 99 氏 [590-591])



■ 1.27b での変更点 (2003-12-09)

* phoenix 配列テーブルファイルの追加

  phoenix.tbl を追加しました。
  phoenix 配列は、萩谷洋治さんによるオリジナルの配列です。
  詳しくは、萩谷さんのページ
    <http://www.h5.dion.ne.jp/~y_hagiya/hairetsu.html>
  をご覧ください。

* TUT-Code テーブルの修正

  tut.tbl にて「als @B」(後置型の部首合成変換) の定義が脱落していたのを
  修正しました。
  (木原英人さん報告 [tcode-ml:2450])

* 半濁音定義の修正

  「う°」→「ヴ」「か°」→「ヵ」「け°」→「ヶ」を追加。



■ 1.27a での変更点 (2003-10-04)

* 熟語ガイド機能

  設定ファイルで「gg=kwgg.dic」オプションを指定すると、
  漢字を入力した後、続く漢字の候補の 1、2 打鍵目のキーが、仮想鍵盤上に
  紫色でガイド表示されるようになります。
  キーが重複する場合は「２」や「３」のように表示されます。
  なお、仮想鍵盤の表示が変わるだけで、文字の打ち方自体は変わりません。

  熟語ガイド辞書のサンプルとして、kwgg.dic を付属しました。
  この辞書は、交ぜ書き変換辞書 kwmaze.dic から、漢字を含むすべての連なりを
  機械的に拾い出して作成したものです。
  特に高頻度の漢字に対しては、候補の重複が多くなっているかも知れません。

  ※ 熟語ガイド機能のコード、および熟語ガイド辞書作成スクリプトは、
  『【漢直】T-Code/TUT-Codeスレ Lesson2【連習】』
  <http://pc.2ch.net/test/read.cgi/unix/1061936143/>
  の 99 氏によるものです ([102-106,208-209,211-212,240-241])。

* 「ouputSleep=n」オプション (後置変換時の BS の送出タイミング)

  後置変換で、変換した文字がうまく置き換わらない場合のために、
  設定ファイルのオプション「outputSleep=n」を新設しました。
  後置変換で BS を送出した後、n の部分に指定した時間 (単位はミリ秒) だけ
  Sleep() するようになります。

  ※ 同「連習スレ-2」の 99 氏の指摘によります ([102-106])。

* シフトキーの扱いの改善 (「shiftKana=1」指定時)

  1.27 版では「shiftKana=1」オプション指定時に「?」や「!」などの
  記号文字が入力できない問題がありました。
  1.27a 版では、シフト打鍵はかな文字の入力に使われるキーだけを
  「漢直Win」で取り、それ以外のキーのシフト打鍵は、通常の打鍵として
  扱うようになりました。

  ※ 木原英人さんのパッチによります ([tcode-ml:2438])。

* 部首合成辞書の誤りの修正

  付属の kwbushu.dic の半角/全角文字の等価定義の、次の誤りを修正しました。
    "″
    '′
    ,、
    .。
    ~〜
  例えば、「◆水、」→「氷」のような合成が (正しく) 行えるように
  なっています。

* マニュアルの更新

  上記の変更点を反映しました。



■ 1.26* → 1.27 での変更点は、news127.txt をご覧ください。
